params {

    // Specifiy containers used *per tool*
    containers {
        cellranger = "/ddn1/vol1/staging/leuven/res_00001/software/CellRanger/3.1.0/CellRanger_3.1.0.sif"
        scanpy = 'docker://dweemx/sctx-scanpy:0.2.0'
    }


    // These parameters are passed to all processes
    global {
        baseFilePath = "/opt/SingleCellTxBenchmark"
        template_ipynb = "/vsc-hard-mounts/leuven-user/309/vsc30922/git/SingleCellTxBenchmark/src/singlecelltxbenchmark/scripts/scanpy/filter/sc_filter_qc_report.ipynb"
        project_name = "MCF7"
        outdir = "out"
        tenx_folder = "/ddn1/vol1/staging/leuven/stg_00002/lcb/lcb_projects/TWE/cellranger/TEW*/outs/filtered_feature_bc_matrix"
    }

    sc {
        cellranger {
            mkfastq {
                // https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/using/mkfastq
                container = "/ddn1/vol1/staging/leuven/res_00001/software/CellRanger/3.1.0/CellRanger_3.1.0.sif"
                // samplesheet = ""
                runFolder = "/staging/leuven/stg_00002/lcb/ngs_runs/NextSeq500_20190522/190522_NB501171_0382_AHHJN2BGXB/"
                // runID = ""
                csv = "/ddn1/vol1/staging/leuven/stg_00002/lcb/lcb_projects/TWE/analysis/singlecelltxbenchmark/cellranger_testing/NextSeq500_20190522_SampleSheet.csv"
                // ignoreDualIndex = false
                // qc = false
                // lanes = "1"
                // useBasesMask = ""
                // deleteUndetermined = false
                // outputDir = ""
                // project = ""
                // jobMode = ""
                // localCores = ""
                // localMem = ""
            }
            count {
                container = "/ddn1/vol1/staging/leuven/res_00001/software/CellRanger/3.1.0/CellRanger_3.1.0.sif"
                transcriptome = "/ddn1/vol1/staging/leuven/res_00001/genomes/homo_sapiens/hg38_iGenomes/indexes/CellRanger/3.0.2/hg38_iGenomes"
                // libraries = ""
                // featureRef = ""
                // expectCells = ""
                // forceCells = ""
                // nosecondary = ""
                // noLibraries = ""
                // chemistry = ""
                // r1Length = ""
                // r2Length = ""
                // lanes = ""
                // localCores = ""
                // localMem = ""
                // indicies = ""
            }
        }
        file_converter {
            iff = "10x_mtx"
            off = "h5ad" 
            useFilteredMatrix = true
        }
        file_annotator {
            iff = "10x_mtx"
            off = "h5ad" 
            type = "sample" 
            metaDataFilePath = '/ddn1/vol1/staging/leuven/stg_00002/lcb/lcb_projects/TWE/cellranger/metadata.tsv'
        }
        file_concatenator {
            join = 'outer'
            iff = '10x_mtx' 
            off = 'h5ad' 
        }
        scanpy {
            filter {
               cellFilterMinNGenes = 200 
                cellFilterMaxNGenes = 4000
                cellFilterMaxPercentMito = 0.15 
                geneFilterMinNCells = 3 
                iff = "10x_mtx" 
                off = "h5ad" 
                outdir = "out" 
            }
            data_transformation {
                dataTransformationMethod = 'log1p'
                iff = '10x_mtx' 
                off = 'h5ad' 
            }
            normalization {
                normalizationMethod = 'cpx' 
                countsPerCellAfter = 10000 
                iff = '10x_mtx' 
                off = 'h5ad'  
            }
            feature_selection {
                featureSelectionMethod = 'mean_disp_plot' 
                featureSelectionMinMean = 0.0125  // 0.125
                featureSelectionMaxMean = 3  // 2.5
                featureSelectionMinDisp = 0.5  //0.7
                iff = '10x_mtx' 
                off = 'h5ad' 
            }
            feature_scaling {
                featureScalingMthod = 'zscore_scale' 
                featureScalingMaxSD = 10 
                iff = '10x_mtx' 
                off = 'h5ad' 
            }
            dim_reduction {
                pca {
                    dimReductionMethod = 'PCA' 
                    nComps = 50 
                    iff = '10x_mtx' 
                    off = 'h5ad' 
                }
                umap {
                    dimReductionMethod = 'UMAP' 
                    nComps = 20 
                    iff = '10x_mtx' 
                    off = 'h5ad'
                }
            }
            batch_effect_correct {
                batchEffectCorrectionMethod = 'bbknn' 
                neighborsWithinBatch = 5
                nPcs = 20 
                trim = 0
                iff = '10x_mtx' 
                off = 'h5ad' 
            }
            clustering {
                clusteringMethod = 'Louvain' 
                resolution = 0.8 
                iff = '10x_mtx' 
                off = 'h5ad' 
            }
        }
    }
}

profiles {

    singularity {
        singularity.enabled = true
        process.container = params.containers.scanpy
        singularity.autoMounts = true
        singularity.runOptions = '-B /ddn1/vol1/staging/leuven/stg_00002/:/ddn1/vol1/staging/leuven/stg_00002/ -B /staging/leuven/stg_00002/:/staging/leuven/stg_00002/'
    }

    conda { 
        process.conda = "$baseDir/environment.yml"
    }

}